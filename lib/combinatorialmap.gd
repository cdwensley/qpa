DeclareCategory( "IsCombinatorialMap", IsComponentObjectRep and IsAttributeStoringRep );
DeclareRepresentation( "IsCombinatorialMapRep", IsCombinatorialMap, [ "size", "ordering", "paring", "bluedots" ] );
DeclareOperation( "CombinatorialMap", [ IsPosInt, IsPerm, IsPerm, IsList ] );
DeclareAttribute( "Size", IsCombinatorialMap );
DeclareAttribute( "OrderingOfCombinatorialMap", IsCombinatorialMap );
DeclareAttribute( "PairingOfCombinatorialMap", IsCombinatorialMap );
DeclareAttribute( "MarkedEdgesOfCombinatorialMap", IsCombinatorialMap );
DeclareAttribute( "FacesOfCombinatorialMap", IsCombinatorialMap );
DeclareAttribute( "GenusOfCombinatorialMap", IsCombinatorialMap );
DeclareAttribute( "DualOfCombinatorialMap", IsCombinatorialMap );
DeclareOperation( "AreDerivedEquivalent", [IsQuiverAlgebra, IsQuiverAlgebra]);
DeclareAttribute( "MaximalPathsOfGentleAlgebra", IsGentleAlgebra);
DeclareOperation( "RemoveEdgeOfCombinatorialMap", [IsCombinatorialMap, IsList]);
DeclareAttribute( "CombinatorialMapOfGentleAlgebra", IsGentleAlgebra);
DeclareAttribute( "MarkedBoundariesOfCombinatorialMap", IsCombinatorialMap);
DeclareOperation( "WindingNumber", [IsCombinatorialMap, IsList]);
DeclareAttribute( "BoundaryCurvesOfCombinatorialMap", IsCombinatorialMap);
DeclareOperation( "DepthSearchCombinatorialMap", [IsCombinatorialMap, IsPosInt]);
DeclareOperation( "WidthSearchCombinatorialMap", [IsCombinatorialMap, IsPosInt]);
DeclareAttribute( "NonSeperatingCurve", IsCombinatorialMap);
DeclareOperation( "CutNonSepCombinatorialMap", [IsCombinatorialMap, IsList, IsList]);
DeclareOperation( "JoinCurveCombinatorialMap", [IsCombinatorialMap, IsList, IsList, IsList]);
DeclareOperation( "CutJoinCurveCombinatorialMap", [IsCombinatorialMap, IsList, IsList, IsList, IsList]);
DeclareAttribute( "HomologyBasisOfCombinatorialMap", IsCombinatorialMap);
BindGlobal( "TheFamilyOfCombinatorialMaps", NewFamily( "TheFamilyOfCombinatorialMaps" ) );
BindGlobal( "TheTypeCombinatorialMap", NewType( TheFamilyOfCombinatorialMaps, IsCombinatorialMapRep ) );
